/*
 *   This file was automatically generated by version 1.6 of cextract.
 *   Manual editing not recommended.
 *
 *   Created: Wed Mar  1 14:40:30 1995
 */
#ifndef __CEXTRACT__
#if __STDC__

extern void device2world ( int x, int y, double *wx, double *wy );
extern void device2view ( int x, int y, double *vx, double *vy );
extern void view2world ( double vx, double vy, double *x, double *y );
extern int world2deviceabs ( double wx, double wy, int *x, int *y );
extern int world2device ( double wx, double wy, int *x, int *y );
extern int world2view ( double x, double y, double *vx, double *vy );
extern double xconv ( double x );
extern double yconv ( double y );
extern int set_coordmap ( int mapx, int mapy );
extern void setfixedscale ( double xv1, double yv1, double xv2, double yv2, double *xg1, double *yg1, double *xg2, double *yg2 );
extern void defineworld ( double x1, double y1, double x2, double y2, int mapx, int mapy );
extern void viewport ( double x1, double y1, double x2, double y2 );
extern void setclipping ( int fl );
extern int clipt ( double d, double n, double *te, double *tl );
extern void my_draw2 ( double x2, double y2 );
extern void my_move2 ( double x, double y );
extern int setpattern ( int k );
extern void fillpattern ( int n, double px[], double py[] );
extern void fillcolor ( int n, double px[], double py[] );
extern void fillrectcolor ( double x1, double y1, double x2, double y2 );
extern void fillrectpat ( double x1, double y1, double x2, double y2 );
extern int setfont ( int f );
extern void rect ( double x1, double y1, double x2, double y2 );
extern void rectstr ( double x1, double y1, double x2, double y2, int px, int py );
extern int symok ( double x, double y );
extern int lengthpoly ( double x[], double y[], int n );
extern void drawpoly ( double x[], double y[], int n );
extern void drawpolyseg ( double x[], double y[], int n );
extern void openclose ( double x, double y1, double y2, double ebarlen, int xy );
extern void errorbar ( double x, double y, double ebarlen, int xy );
extern int setcolor ( int col );
extern int setlinestyle ( int style );
extern int setlinewidth ( int wid );
extern void drawtic ( double x, double y, int dir, int axis );
extern double setcharsize ( double size );
extern void setticksize ( double sizex, double sizey );
extern void writestr ( double x, double y, int dir, int just, char *s );
extern void drawtitle ( char *title, int which );
extern void drawgridlines ( int dir, double start, double end, double y1, double y2, double step, int cy, int ly, int wy );
extern void drawcircle ( double xc, double yc, double s, int f );
extern void symcircle ( int x, int y, double s, int f );
extern void symfish1 ( int x, int y, double s, int f );
extern void symfish2 ( int x, int y, double s, int f );
extern void symsquare ( int x, int y, double s, int f );
extern void symtriangle1 ( int x, int y, double s, int f );
extern void symtriangle2 ( int x, int y, double s, int f );
extern void symtriangle3 ( int x, int y, double s, int f );
extern void symtriangle4 ( int x, int y, double s, int f );
extern void symdiamond ( int x, int y, double s, int f );
extern void symplus ( int x, int y, double s, int f );
extern void symx ( int x, int y, double s, int f );
extern void symstar ( int x, int y, double s, int f );
extern void symsplat ( int x, int y, double s, int f );
extern void drawpolysym ( double x[], double y[], int len, int sym, int skip, int fill, double size );
extern void draw_head ( int ix1, int iy1, int ix2, int iy2, int sa, int type );
extern void draw_arrow ( double x1, double y1, double x2, double y2, int end, double asize, int type );
extern void velplt ( double xx, double yy, double u, double v, double vscale );
extern void fluxplt ( double xx, double yy, double u, double v, double vscale );
extern void drawsym ( int x, int y, int sym, double size, int fill );
extern void putlegend ( int i, int d, int xlen, int ylen, double size, double x, double y, int sy, int ly, int cy, int wy, char *s, int barflag, int fill, int fu, int fc, int fp );
extern int putlegendrect ( int fill, int fillusing, int fillcolor, int fillpat, int cy, int wy, int ly );
extern void putpatlegend ( int i, int xlen, int ylen, int xgap, int ygap, double size, double x, double y, double val, int pat, int ly, int cy, int ib, int prec, int labtype, char *lab );
extern void my_doublebuffer ( int mode );
extern void my_frontbuffer ( int mode );
extern void my_backbuffer ( int mode );
extern void my_swapbuffer ( void );
extern int set_colormapdata ( int i, int rr, int gg, int bb );
extern int set_colormap ( int cm, int i, int rr, int gg, int bb );
extern int initgraphics ( int device );
extern void leavegraphics ( void );
extern void putelevmarker ( double x, double y, double ex, double ey, double emin, double emax, double e );
extern void set_video ( int vflag );
extern void drawclock ( double x, double y, double tott, double t, int clock_color, int clock_fillcolor );
extern void drawmapscale ( double mapx, double mapy, double maplen, char *buf );
extern void drawvellegend ( double velx, double vely, double vellenu, double vellenv, double vscale, char *buf );
extern void drawfluxlegend ( double velx, double vely, double vellenu, double vellenv, double vscale, char *buf );
extern void drawisollegend ( double legx, double legy, double cis[], int n, int vgap, int hgap, int form, int prec, int lcol, int cmap[], int nmap, int vid );
extern void drawisollegendh ( double legx, double legy, double cis[], int n, int vgap, int hgap, int form, int prec, int lcol, int cmap[], int nmap, int vid );
extern double convt ( double t, int units );
extern char *format_time ( double t, int units );
extern void timeline ( double t, double start, double end, double tdiv, int units, int prec, double locx, double locy, int len, int layout, int c1, int c2, int c3 );
extern int set_saveimages ( int s );
extern void initialize_cms_data ( void );

#else /* __STDC__ */

extern void device2world (/* int x, int y, double *wx, double *wy */);
extern void device2view (/* int x, int y, double *vx, double *vy */);
extern void view2world (/* double vx, double vy, double *x, double *y */);
extern int world2deviceabs (/* double wx, double wy, int *x, int *y */);
extern int world2device (/* double wx, double wy, int *x, int *y */);
extern int world2view (/* double x, double y, double *vx, double *vy */);
extern double xconv (/* double x */);
extern double yconv (/* double y */);
extern int set_coordmap (/* int mapx, int mapy */);
extern void setfixedscale (/* double xv1, double yv1, double xv2, double yv2, double *xg1, double *yg1, double *xg2, double *yg2 */);
extern void defineworld (/* double x1, double y1, double x2, double y2, int mapx, int mapy */);
extern void viewport (/* double x1, double y1, double x2, double y2 */);
extern void setclipping (/* int fl */);
extern int clipt (/* double d, double n, double *te, double *tl */);
extern void my_draw2 (/* double x2, double y2 */);
extern void my_move2 (/* double x, double y */);
extern int setpattern (/* int k */);
extern void fillpattern (/* int n, double px[], double py[] */);
extern void fillcolor (/* int n, double px[], double py[] */);
extern void fillrectcolor (/* double x1, double y1, double x2, double y2 */);
extern void fillrectpat (/* double x1, double y1, double x2, double y2 */);
extern int setfont (/* int f */);
extern void rect (/* double x1, double y1, double x2, double y2 */);
extern void rectstr (/* double x1, double y1, double x2, double y2, int px, int py */);
extern int symok (/* double x, double y */);
extern int lengthpoly (/* double x[], double y[], int n */);
extern void drawpoly (/* double x[], double y[], int n */);
extern void drawpolyseg (/* double x[], double y[], int n */);
extern void openclose (/* double x, double y1, double y2, double ebarlen, int xy */);
extern void errorbar (/* double x, double y, double ebarlen, int xy */);
extern int setcolor (/* int col */);
extern int setlinestyle (/* int style */);
extern int setlinewidth (/* int wid */);
extern void drawtic (/* double x, double y, int dir, int axis */);
extern double setcharsize (/* double size */);
extern void setticksize (/* double sizex, double sizey */);
extern void writestr (/* double x, double y, int dir, int just, char *s */);
extern void drawtitle (/* char *title, int which */);
extern void drawgridlines (/* int dir, double start, double end, double y1, double y2, double step, int cy, int ly, int wy */);
extern void drawcircle (/* double xc, double yc, double s, int f */);
extern void symcircle (/* int x, int y, double s, int f */);
extern void symfish1 (/* int x, int y, double s, int f */);
extern void symfish2 (/* int x, int y, double s, int f */);
extern void symsquare (/* int x, int y, double s, int f */);
extern void symtriangle1 (/* int x, int y, double s, int f */);
extern void symtriangle2 (/* int x, int y, double s, int f */);
extern void symtriangle3 (/* int x, int y, double s, int f */);
extern void symtriangle4 (/* int x, int y, double s, int f */);
extern void symdiamond (/* int x, int y, double s, int f */);
extern void symplus (/* int x, int y, double s, int f */);
extern void symx (/* int x, int y, double s, int f */);
extern void symstar (/* int x, int y, double s, int f */);
extern void symsplat (/* int x, int y, double s, int f */);
extern void drawpolysym (/* double x[], double y[], int len, int sym, int skip, int fill, double size */);
extern void draw_head (/* int ix1, int iy1, int ix2, int iy2, int sa, int type */);
extern void draw_arrow (/* double x1, double y1, double x2, double y2, int end, double asize, int type */);
extern void velplt (/* double xx, double yy, double u, double v, double vscale */);
extern void fluxplt (/* double xx, double yy, double u, double v, double vscale */);
extern void drawsym (/* int x, int y, int sym, double size, int fill */);
extern void putlegend (/* int i, int d, int xlen, int ylen, double size, double x, double y, int sy, int ly, int cy, int wy, char *s, int barflag, int fill, int fu, int fc, int fp */);
extern int putlegendrect (/* int fill, int fillusing, int fillcolor, int fillpat, int cy, int wy, int ly */);
extern void putpatlegend (/* int i, int xlen, int ylen, int xgap, int ygap, double size, double x, double y, double val, int pat, int ly, int cy, int ib, int prec, int labtype, char *lab */);
extern void my_doublebuffer (/* int mode */);
extern void my_frontbuffer (/* int mode */);
extern void my_backbuffer (/* int mode */);
extern void my_swapbuffer (/* void */);
extern int set_colormapdata (/* int i, int rr, int gg, int bb */);
extern int set_colormap (/* int cm, int i, int rr, int gg, int bb */);
extern int initgraphics (/* int device */);
extern void leavegraphics (/* void */);
extern void putelevmarker (/* double x, double y, double ex, double ey, double emin, double emax, double e */);
extern void set_video (/* int vflag */);
extern void drawclock (/* double x, double y, double tott, double t, int clock_color, int clock_fillcolor */);
extern void drawmapscale (/* double mapx, double mapy, double maplen, char *buf */);
extern void drawvellegend (/* double velx, double vely, double vellenu, double vellenv, double vscale, char *buf */);
extern void drawfluxlegend (/* double velx, double vely, double vellenu, double vellenv, double vscale, char *buf */);
extern void drawisollegend (/* double legx, double legy, double cis[], int n, int vgap, int hgap, int form, int prec, int lcol, int cmap[], int nmap, int vid */);
extern void drawisollegendh (/* double legx, double legy, double cis[], int n, int vgap, int hgap, int form, int prec, int lcol, int cmap[], int nmap, int vid */);
extern double convt (/* double t, int units */);
extern char *format_time (/* double t, int units */);
extern void timeline (/* double t, double start, double end, double tdiv, int units, int prec, double locx, double locy, int len, int layout, int c1, int c2, int c3 */);
extern int set_saveimages (/* int s */);
extern void initialize_cms_data (/* void */);

#endif /* __STDC__ */
#endif /* __CEXTRACT__ */
